#pragma hdrstop

#include "ResponseHeader.h"

ResponseHeader::ResponseHeader(char* val) {
	FstBuff = val;
	UnicodeString FullStr = UnicodeString(val);
	UnicodeString TempFullStr = FullStr;
	HdrLen = FullStr.Pos(UnicodeString("\r\n\r\n"))+ 3;
	// rootAttrib and list both point to a list. rootAttrib is static. list is used to transvers the list.
	rootAttrib = new node;
	list = new node;
	rootAttrib = list;


	for (int i = 0; i < 20; i++)
	{
		Pos[i]=0;
	}

	int i = 0;
	do
	{
		Pos[i] = FullStr.Pos("\r\n")+ 1;
		// AttribStr is the line of Response Header
		list->fAttrib = FullStr.SubString(1,Pos[i]);
		// Temppos is the position of ":" inside the line
		int tempPos = list->fAttrib.Pos(":");
		if (tempPos!=0) {

		list->pAttrib = list->fAttrib.SubString(1,tempPos-1);
		list->vAttrib = list->fAttrib.SubString(tempPos+1,Pos[i]);
		}
		else {
		list->pAttrib = list->vAttrib=list->fAttrib;
		}

		struct node* tempNode = new node;
		list->next = tempNode;
		list = tempNode;

		FullStr = FullStr.SubString(Pos[i],HdrLen+3);
		i++;



	}while( i<20 && Pos[i-1]>=3 );
	list->next=NULL;
	list = rootAttrib;
}
